#!en;@VERSION@

#[gtk-about]
[Icon]
#F[Desired icon size for this applet]
frame1 = 
#i width :
width = 32
#i height :
height = 32

#F
frame1_ = 
#s Name of the icon as it will appear in its label in the dock :
name = Compiz Icon
#E[] Name of the dock it belongs to:
dock name = 

order=

#[gtk-convert]
[Desklet]

#i[48;256] Desklet's dimension (width x height) :
#{Depending on your WindowManager, you can resize it with ALT + middle_click or ALT + left_click for exemple.}
width=92
#i[48;256] ...
height=92

#i Desklet's position (x ; y) :
#{Depending on your WindowManager, you can move it with ALT + left_click}
x position=0
#i ...
y position=0

#b Is detached from the dock ?
initially detached=false

#b Keep below other windows ?
keep below=false
#b Keep above other windows ?
keep above=false
#b Keep on widget layer ?
#{for CompizFusion's "widget layer", set behaviour in Compiz to: (name=cairo-dock & type=utility)}
on widget layer=false
#b Lock position ?
#{If locked, the desklet can't be moved by simply dragging it with the left mouse button. Of course you can still move it with ALT + left_click.}
locked = false

#[gtk-preferences]
[Configuration]

#F[Actions;gtk-preferences]
frame_act = 

#r[None;Switch WM;Widget Layer;Expose;Show Desktop] Choose an action for the middle click on the icon :
#{Except for switching to another WM, you must activate the Dbus plugin in Compiz, along with the plug-in corresponding to the desired action.}
middle click = 1

#s Custom command for system's Windows Manager :
#{This command will be used to launch the system WM; let it blank to use the default one.}
ccmd =

#b Auto-reload Compiz ?
#{If Compiz unexpectedly quit, Cairo-Dock will restart it. You have to quit Compiz from the dock then.}
auto reload compiz = false
#b Auto-reload the Decorator ?
#{If the decorator unexpectedly quit, Cairo-Dock will restart it. You have to quit Compiz from the dock then.}
auto reload decorator = true

#b Force Compiz settings at startup ?
#{Load Compiz with options at applet's startup.}
force = false

#b Steal the application's icon in taskbar ?
#{It will prevent the CSSM or Emerald icon to appear in the task bar. The corresponding subdock's icons will then behave as launcher and an appli.}
inhibate appli = true

#b Add Exposition & Widget Layer to sub-dock ?
#{Display in the applet's sub-dock 2 icons for Compiz Exposition & Widget Layer plug-ins. Otherwise they will be available in the menu.}
script = true

#F[Compiz Options;gtk-info]
frame_co = 
#b Use Loose Binding ?
#{With strict binding textures are bound whenever they are enabled, with loose binding they are enabled when created. The Nvidia driver seems a bit slow when binding textures, that's why this option gives a heavy performance increase on Nvidia.}
binding = false
#b Use Indirect Rendering ?
#{Use thoses options only if you know them.}
irendering = false
#E1[emerald;gtk-window-decorator;kde-window-decorator;heliodor] Choose your Windows Decorator :
#{By default it will be Emerald.}
system decorator = 

#F
frame_sub=
#n Name of the view used for the sub-dock :
#{Let it empty to use default sub-dock view.}/
renderer = 

#F[Images;gtk-dialog-info]
frame_img = 
#S Name of an image for the 'default' icon :
#{Let t empty to use the default icon.}
default icon = 
#S Name of an image for the 'broken' icon :
#{Let t empty to use the default icon.}
broken icon = 
#S Name of an image for the 'other wm' icon :
#{Let t empty to use the default icon.}
other icon = 
#S Name of an image for the 'setting' icon :
#{Let t empty to use the default icon.}
setting icon = 
#S Name of an image for the 'emerald' icon :
#{Let t empty to use the default icon.}
emerald icon = 
#S Name of an image for the 'reload' icon :
#{Let t empty to use the default icon.}
reload icon = 
#S Name of an image for the 'exposition' icon :
#{Let t empty to use the default icon.}
expo icon = 
#S Name of an image for the 'widget layer' icon :
#{Let t empty to use the default icon.}
wlayer icon = 
