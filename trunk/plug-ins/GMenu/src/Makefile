# Makefile.in generated by automake 1.10.1 from Makefile.am.
# GMenu/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkglibdir = $(libdir)/cairo-dock-plugins
pkgincludedir = $(includedir)/cairo-dock-plugins
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = GMenu/src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libcd_GMenu_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_libcd_GMenu_la_OBJECTS = libcd_GMenu_la-applet-init.lo \
	libcd_GMenu_la-applet-config.lo \
	libcd_GMenu_la-applet-notifications.lo \
	libcd_GMenu_la-applet-menu-callbacks.lo \
	libcd_GMenu_la-applet-menu.lo libcd_GMenu_la-applet-util.lo
libcd_GMenu_la_OBJECTS = $(am_libcd_GMenu_la_OBJECTS)
libcd_GMenu_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libcd_GMenu_la_CFLAGS) \
	$(CFLAGS) $(libcd_GMenu_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcd_GMenu_la_SOURCES)
DIST_SOURCES = $(libcd_GMenu_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
pkgdatadir = /usr/share/cairo-dock/plug-ins
ACLOCAL = ${SHELL} /home/fab/CD/trunk/plug-ins/missing --run aclocal-1.10
ALL_LINGUAS = 
ALSA_MIXER_PACKAGE_CFLAGS = -I/usr/include/alsa  
ALSA_MIXER_PACKAGE_LIBS = -lasound  
AMTAR = ${SHELL} /home/fab/CD/trunk/plug-ins/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/fab/CD/trunk/plug-ins/missing --run autoconf
AUTOHEADER = ${SHELL} /home/fab/CD/trunk/plug-ins/missing --run autoheader
AUTOMAKE = ${SHELL} /home/fab/CD/trunk/plug-ins/missing --run automake-1.10
AWK = mawk
CATALOGS = 
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
Clipperdatadir = /usr/share/cairo-dock/plug-ins/Clipper
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GETTEXT_ALSA_MIXER = cd-AlsaMixer
GETTEXT_CAIRO_PENGUIN = cd-Cairo-Penguin
GETTEXT_CLIPPER = cd-Clipper
GETTEXT_CLOCK = cd-clock
GETTEXT_COMPIZ_ICON = cd-compiz-icon
GETTEXT_CPUSAGE = cd-cpusage
GETTEXT_DBUS = cd-Dbus
GETTEXT_DUSTBIN = cd-dustbin
GETTEXT_GMENU = cd-GMenu
GETTEXT_LOGOUT = cd-logout
GETTEXT_NETSPEED = cd-netspeed
GETTEXT_NVIDIA = cd-nVidia
GETTEXT_PACKAGE = cairo-dock-plugins
GETTEXT_POWERMANAGER = cd-powermanager
GETTEXT_RAME = cd-rame
GETTEXT_RENDERING = cd-rendering
GETTEXT_RHYTHMBOX = cd-rhythmbox
GETTEXT_SHORTCUTS = cd-shortcuts
GETTEXT_SHOW_DESKLETS = cd-showDesklets
GETTEXT_SHOW_DESKTOP = cd-showDesktop
GETTEXT_SLIDER = cd-slider
GETTEXT_STACK = cd-stack
GETTEXT_SWITCHER = cd-switcher
GETTEXT_SYSTRAY = cd-systray
GETTEXT_TERMINAL = cd-terminal
GETTEXT_TOMBOY = cd-tomboy
GETTEXT_WEATHER = cd-weather
GETTEXT_WIFI = cd-wifi
GETTEXT_XGAMMA = cd-Xgamma
GETTEXT_XMMS = cd-xmms
GMENU_PACKAGE_CFLAGS = -I/usr/include/gnome-menus -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GMENU_PACKAGE_LIBS = -lgnome-menu -lgio-2.0 -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GNOME_INTEGRATION_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GNOME_INTEGRATION_LIBS = -lgio-2.0 -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_CAVES_RULE = %.caves:     %.caves.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DESKTOP_RULE = %.desktop:   %.desktop.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DIRECTORY_RULE = %.directory: %.directory.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_EXTRACT = $(top_builddir)/intltool-extract
INTLTOOL_KBD_RULE = %.kbd:       %.kbd.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -m -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_KEYS_RULE = %.keys:      %.keys.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -k -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_MERGE = $(top_builddir)/intltool-merge
INTLTOOL_OAF_RULE = %.oaf:       %.oaf.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -p $(top_srcdir)/po $< $@
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_POLICY_RULE = %.policy:    %.policy.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_PONG_RULE = %.pong:      %.pong.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_PROP_RULE = %.prop:      %.prop.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SCHEMAS_RULE = %.schemas:   %.schemas.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -s -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SERVER_RULE = %.server:    %.server.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SERVICE_RULE = %.service: %.service.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SHEET_RULE = %.sheet:     %.sheet.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SOUNDLIST_RULE = %.soundlist: %.soundlist.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_THEME_RULE = %.theme:     %.theme.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UI_RULE = %.ui:        %.ui.in        $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UPDATE = $(top_builddir)/intltool-update
INTLTOOL_XAM_RULE = %.xam:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_XML_NOMERGE_RULE = %.xml:       %.xml.in       $(INTLTOOL_MERGE) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u /tmp $< $@
INTLTOOL_XML_RULE = %.xml:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/fab/CD/trunk/plug-ins/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NMEDIT = 
OBJEXT = o
OLD_GNOME_INTEGRATION_CFLAGS = -pthread -DORBIT2=1 -I/usr/local/include/cairo -I/usr/local/include -I/usr/local/include/pixman-1 -I/usr/include/gnome-vfs-2.0 -I/usr/lib/gnome-vfs-2.0/include -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libgnomeui-2.0 -I/usr/include/libart-2.0 -I/usr/include/gnome-keyring-1 -I/usr/include/libgnome-2.0 -I/usr/include/libbonoboui-2.0 -I/usr/include/libgnomecanvas-2.0 -I/usr/include/gtk-2.0 -I/usr/include/libbonobo-2.0 -I/usr/include/bonobo-activation-2.0 -I/usr/include/libxml2 -I/usr/include/pango-1.0 -I/usr/include/gail-1.0 -I/usr/include/freetype2 -I/usr/include/atk-1.0 -I/usr/lib/gtk-2.0/include -I/usr/include/libpng12  
OLD_GNOME_INTEGRATION_LIBS = -pthread -L/usr/local/lib -lgnomeui-2 -lSM -lICE -lbonoboui-2 -lgnomevfs-2 -lgnomecanvas-2 -lgnome-2 -lpopt -lbonobo-2 -lbonobo-activation -lORBit-2 -lart_lgpl_2 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgconf-2 -lgthread-2.0 -lrt -lgmodule-2.0 -ldl -lgobject-2.0 -lglib-2.0  
PACKAGE = cairo-dock-plugins
PACKAGE_ALSA_MIXER = cd-AlsaMixer
PACKAGE_BUGREPORT = Fabrice Rey (fabounet@users.berlios.de)
PACKAGE_CAIRO_PENGUIN = cd-Cairo-Penguin
PACKAGE_CFLAGS = -pthread -I/usr/local/include/cairo -I/usr/local/include -I/usr/local/include/pixman-1 -I/usr/include/cairo-dock -I/usr/include/cairo-dock/cairo-dock -I/usr/include/gtk-2.0 -I/usr/include/librsvg-2 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/libxml2 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12  
PACKAGE_CLIPPER = cd-Clipper
PACKAGE_CLOCK = cd-clock
PACKAGE_COMPIZ_ICON = cd-compiz-icon
PACKAGE_CPUSAGE = cd-cpusage
PACKAGE_DBUS = cd-Dbus
PACKAGE_DUSTBIN = cd-dustbin
PACKAGE_GMENU = cd-GMenu
PACKAGE_GNOME_INTEGRATION = cd-gnome-integration
PACKAGE_GNOME_INTEGRATION_OLD = cd-gnome-integration-old
PACKAGE_LIBS = -pthread -L/usr/local/lib -lXtst -lXrender -lglitz-glx -lGL -lpthread -lX11 -lglitz -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lpangocairo-1.0 -lpango-1.0 -lgthread-2.0 -lrt -lrsvg-2 -lgdk_pixbuf-2.0 -lm -lcairo -lgmodule-2.0 -ldl -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lglib-2.0 -lxml2  
PACKAGE_LOGOUT = cd-logout
PACKAGE_NAME = cairo-dock-plugins
PACKAGE_NETSPEED = cd-netspeed
PACKAGE_NVIDIA = cd-nVidia
PACKAGE_POWERMANAGER = cd-powermanager
PACKAGE_RAME = cd-rame
PACKAGE_RENDERING = cd-rendering
PACKAGE_RHYTHMBOX = cd-rhythmbox
PACKAGE_SHORTCUTS = cd-shortcuts
PACKAGE_SHOW_DESKLETS = cd-showDesklets
PACKAGE_SHOW_DESKTOP = cd-showDesktop
PACKAGE_SLIDER = cd-slider
PACKAGE_STACK = cd-stack
PACKAGE_STRING = cairo-dock-plugins 1.6.2.3
PACKAGE_SWITCHER = cd-switcher
PACKAGE_SYSTRAY = cd-systray
PACKAGE_TARNAME = cairo-dock-plugins
PACKAGE_TERMINAL = cd-terminal
PACKAGE_TOMBOY = cd-tomboy
PACKAGE_VERSION = 1.6.2.3
PACKAGE_WEATHER = cd-weather
PACKAGE_WIFI = cd-wifi
PACKAGE_XFCE_INTEGRATION = cd-xfce-integration
PACKAGE_XGAMMA = cd-Xgamma
PACKAGE_XMMS = cd-xmms
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TERMINAL_PACKAGE_CFLAGS = -I/usr/local/include/cairo -I/usr/local/include -I/usr/local/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/gtk-2.0 -I/usr/include/pango-1.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/libpng12  
TERMINAL_PACKAGE_LIBS = -L/usr/local/lib -lvte -lgtk-x11-2.0 -lpangoxft-1.0 -lpangox-1.0 -lX11 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lcairo -lpangoft2-1.0 -lXft -lfreetype -lz -lfontconfig -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
USE_NLS = yes
VERSION = 1.6.2.3
VERSION_ALSA_MIXER = 1.0.3
VERSION_CAIRO_PENGUIN = 1.0.0
VERSION_CLIPPER = 1.0.3
VERSION_CLOCK = 1.3.7
VERSION_COMPIZ_ICON = 1.0.1
VERSION_CPUSAGE = 1.2.0
VERSION_DBUS = 0.2.0
VERSION_DUSTBIN = 2.1.3
VERSION_GMENU = 1.0.0
VERSION_GNOME_INTEGRATION = 1.0.0
VERSION_GNOME_INTEGRATION_OLD = 1.0.1
VERSION_LOGOUT = 1.2.3
VERSION_NETSPEED = 1.0.2
VERSION_NVIDIA = 1.0.2
VERSION_POWERMANAGER = 1.2.8
VERSION_RAME = 1.0.2
VERSION_RENDERING = 1.5.1
VERSION_RHYTHMBOX = 1.2.2
VERSION_SHORTCUTS = 1.1.3
VERSION_SHOW_DESKLETS = 1.0.1
VERSION_SHOW_DESKTOP = 1.0.2
VERSION_SLIDER = 1.0.1
VERSION_STACK = 0.2.1
VERSION_SWITCHER = 1.0.3
VERSION_SYSTRAY = 0.1.5
VERSION_TERMINAL = 1.0.2
VERSION_TOMBOY = 1.0.1
VERSION_WEATHER = 1.1.6
VERSION_WIFI = 1.0.5
VERSION_XFCE_INTEGRATION = 1.0.1
VERSION_XGAMMA = 1.0.5
VERSION_XMMS = 0.2.3
XFCE_INTEGRATION_CFLAGS = -pthread -I/usr/local/include/cairo -I/usr/local/include -I/usr/local/include/pixman-1 -I/usr/include/thunar-vfs-1 -I/usr/include/exo-0.3 -I/usr/include/gtk-2.0 -I/usr/include/xfce4 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12  
XFCE_INTEGRATION_LIBS = -pthread -L/usr/local/lib -lthunar-vfs-1 -lexo-0.3 -lgthread-2.0 -lrt -lgtk-x11-2.0 -lxfce4util -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
XGAMMA_PACKAGE_CFLAGS =  
XGAMMA_PACKAGE_LIBS = -lX11 -lXxf86vm  
XGETTEXT = /usr/bin/xgettext
abs_builddir = /home/fab/CD/trunk/plug-ins/GMenu/src
abs_srcdir = /home/fab/CD/trunk/plug-ins/GMenu/src
abs_top_builddir = /home/fab/CD/trunk/plug-ins
abs_top_srcdir = /home/fab/CD/trunk/plug-ins
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
alsa_mixerdatadir = /usr/share/cairo-dock/plug-ins/AlsaMixer
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
cairo_penguindatadir = /usr/share/cairo-dock/plug-ins/Cairo-Penguin
clockdatadir = /usr/share/cairo-dock/plug-ins/clock
compiz_icondatadir = /usr/share/cairo-dock/plug-ins/compiz-icon
cpusagedatadir = /usr/share/cairo-dock/plug-ins/cpusage
datadir = ${datarootdir}
datarootdir = ${prefix}/share
dbusdatadir = /usr/share/cairo-dock/plug-ins/Dbus
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dustbindatadir = /usr/share/cairo-dock/plug-ins/dustbin
dvidir = ${docdir}
exec_prefix = ${prefix}
gmenudatadir = /usr/share/cairo-dock/plug-ins/GMenu
gnome_integration_olddatadir = /usr/share/cairo-dock/plug-ins/gnome-integration-old
gnome_integrationdatadir = /usr/share/cairo-dock/plug-ins/gnome-integration
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/fab/CD/trunk/plug-ins/install-sh
libdir = /usr/lib/cairo-dock
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
logoutdatadir = /usr/share/cairo-dock/plug-ins/logout
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
netspeeddatadir = /usr/share/cairo-dock/plug-ins/netspeed
nvidiadatadir = /usr/share/cairo-dock/plug-ins/nVidia
oldincludedir = /usr/include
pdfdir = ${docdir}
powermanagerdatadir = /usr/share/cairo-dock/plug-ins/powermanager
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
ramedatadir = /usr/share/cairo-dock/plug-ins/rame
renderingdatadir = /usr/share/cairo-dock/plug-ins/rendering
rhythmboxdatadir = /usr/share/cairo-dock/plug-ins/rhythmbox
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
shortcutsdatadir = /usr/share/cairo-dock/plug-ins/shortcuts
show_deskletsdatadir = /usr/share/cairo-dock/plug-ins/showDesklets
show_desktopdatadir = /usr/share/cairo-dock/plug-ins/showDesktop
sliderdatadir = /usr/share/cairo-dock/plug-ins/slider
srcdir = .
stackdatadir = /usr/share/cairo-dock/plug-ins/stack
switcherdatadir = /usr/share/cairo-dock/plug-ins/switcher
sysconfdir = ${prefix}/etc
systraydatadir = /usr/share/cairo-dock/plug-ins/systray
target_alias = 
terminaldatadir = /usr/share/cairo-dock/plug-ins/terminal
tomboydatadir = /usr/share/cairo-dock/plug-ins/tomboy
top_builddir = ../..
top_srcdir = ../..
weatherdatadir = /usr/share/cairo-dock/plug-ins/weather
wifidatadir = /usr/share/cairo-dock/plug-ins/wifi
xfce_integrationdatadir = /usr/share/cairo-dock/plug-ins/xfce-integration
xgammadatadir = /usr/share/cairo-dock/plug-ins/Xgamma
xmmsdatadir = /usr/share/cairo-dock/plug-ins/xmms
lib_LTLIBRARIES = \
	libcd-GMenu.la

libcd_GMenu_la_SOURCES = \
	applet-init.c\
	applet-init.h\
	applet-config.c\
	applet-config.h\
	applet-notifications.c\
	applet-notifications.h\
	applet-menu-callbacks.c\
	applet-menu-callbacks.h\
	applet-menu.c\
	applet-menu.h\
	applet-util.c\
	applet-util.h\
	applet-struct.h

dock_version = `pkg-config --modversion cairo-dock`
libcd_GMenu_la_CFLAGS = \
	-I$(top_srcdir)/src\
	$(PACKAGE_CFLAGS)\
	$(GMENU_PACKAGE_CFLAGS)\
	-DMY_APPLET_SHARE_DATA_DIR=\""$(gmenudatadir)"\"\
	-DMY_APPLET_README_FILE=\""readme"\"\
	-DMY_APPLET_PREVIEW_FILE=\""preview.png"\"\
	-DMY_APPLET_CONF_FILE=\""GMenu.conf"\"\
	-DMY_APPLET_USER_DATA_DIR=\""GMenu"\"\
	-DMY_APPLET_VERSION=\""$(VERSION_GMENU)"\"\
	-DMY_APPLET_GETTEXT_DOMAIN=\""$(GETTEXT_GMENU)"\"\
	-DMY_APPLET_DOCK_VERSION=\""$(dock_version)"\"\
	-DMY_APPLET_ICON_FILE=\""icon.svg"\"\
	-std=c99\
	-Werror-implicit-function-declaration\
	-O3

#	-g -ggdb -W -Wall
libcd_GMenu_la_LIBADD = \
	$(PACKAGE_LIBS) -lm\
	$(GMENU_PACKAGE_LIBS)

libcd_GMenu_la_LDFLAGS = \
	-avoid-version -module

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  GMenu/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  GMenu/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcd-GMenu.la: $(libcd_GMenu_la_OBJECTS) $(libcd_GMenu_la_DEPENDENCIES) 
	$(libcd_GMenu_la_LINK) -rpath $(libdir) $(libcd_GMenu_la_OBJECTS) $(libcd_GMenu_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcd_GMenu_la-applet-config.Plo
include ./$(DEPDIR)/libcd_GMenu_la-applet-init.Plo
include ./$(DEPDIR)/libcd_GMenu_la-applet-menu-callbacks.Plo
include ./$(DEPDIR)/libcd_GMenu_la-applet-menu.Plo
include ./$(DEPDIR)/libcd_GMenu_la-applet-notifications.Plo
include ./$(DEPDIR)/libcd_GMenu_la-applet-util.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libcd_GMenu_la-applet-init.lo: applet-init.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -MT libcd_GMenu_la-applet-init.lo -MD -MP -MF $(DEPDIR)/libcd_GMenu_la-applet-init.Tpo -c -o libcd_GMenu_la-applet-init.lo `test -f 'applet-init.c' || echo '$(srcdir)/'`applet-init.c
	mv -f $(DEPDIR)/libcd_GMenu_la-applet-init.Tpo $(DEPDIR)/libcd_GMenu_la-applet-init.Plo
#	source='applet-init.c' object='libcd_GMenu_la-applet-init.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -c -o libcd_GMenu_la-applet-init.lo `test -f 'applet-init.c' || echo '$(srcdir)/'`applet-init.c

libcd_GMenu_la-applet-config.lo: applet-config.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -MT libcd_GMenu_la-applet-config.lo -MD -MP -MF $(DEPDIR)/libcd_GMenu_la-applet-config.Tpo -c -o libcd_GMenu_la-applet-config.lo `test -f 'applet-config.c' || echo '$(srcdir)/'`applet-config.c
	mv -f $(DEPDIR)/libcd_GMenu_la-applet-config.Tpo $(DEPDIR)/libcd_GMenu_la-applet-config.Plo
#	source='applet-config.c' object='libcd_GMenu_la-applet-config.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -c -o libcd_GMenu_la-applet-config.lo `test -f 'applet-config.c' || echo '$(srcdir)/'`applet-config.c

libcd_GMenu_la-applet-notifications.lo: applet-notifications.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -MT libcd_GMenu_la-applet-notifications.lo -MD -MP -MF $(DEPDIR)/libcd_GMenu_la-applet-notifications.Tpo -c -o libcd_GMenu_la-applet-notifications.lo `test -f 'applet-notifications.c' || echo '$(srcdir)/'`applet-notifications.c
	mv -f $(DEPDIR)/libcd_GMenu_la-applet-notifications.Tpo $(DEPDIR)/libcd_GMenu_la-applet-notifications.Plo
#	source='applet-notifications.c' object='libcd_GMenu_la-applet-notifications.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -c -o libcd_GMenu_la-applet-notifications.lo `test -f 'applet-notifications.c' || echo '$(srcdir)/'`applet-notifications.c

libcd_GMenu_la-applet-menu-callbacks.lo: applet-menu-callbacks.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -MT libcd_GMenu_la-applet-menu-callbacks.lo -MD -MP -MF $(DEPDIR)/libcd_GMenu_la-applet-menu-callbacks.Tpo -c -o libcd_GMenu_la-applet-menu-callbacks.lo `test -f 'applet-menu-callbacks.c' || echo '$(srcdir)/'`applet-menu-callbacks.c
	mv -f $(DEPDIR)/libcd_GMenu_la-applet-menu-callbacks.Tpo $(DEPDIR)/libcd_GMenu_la-applet-menu-callbacks.Plo
#	source='applet-menu-callbacks.c' object='libcd_GMenu_la-applet-menu-callbacks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -c -o libcd_GMenu_la-applet-menu-callbacks.lo `test -f 'applet-menu-callbacks.c' || echo '$(srcdir)/'`applet-menu-callbacks.c

libcd_GMenu_la-applet-menu.lo: applet-menu.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -MT libcd_GMenu_la-applet-menu.lo -MD -MP -MF $(DEPDIR)/libcd_GMenu_la-applet-menu.Tpo -c -o libcd_GMenu_la-applet-menu.lo `test -f 'applet-menu.c' || echo '$(srcdir)/'`applet-menu.c
	mv -f $(DEPDIR)/libcd_GMenu_la-applet-menu.Tpo $(DEPDIR)/libcd_GMenu_la-applet-menu.Plo
#	source='applet-menu.c' object='libcd_GMenu_la-applet-menu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -c -o libcd_GMenu_la-applet-menu.lo `test -f 'applet-menu.c' || echo '$(srcdir)/'`applet-menu.c

libcd_GMenu_la-applet-util.lo: applet-util.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -MT libcd_GMenu_la-applet-util.lo -MD -MP -MF $(DEPDIR)/libcd_GMenu_la-applet-util.Tpo -c -o libcd_GMenu_la-applet-util.lo `test -f 'applet-util.c' || echo '$(srcdir)/'`applet-util.c
	mv -f $(DEPDIR)/libcd_GMenu_la-applet-util.Tpo $(DEPDIR)/libcd_GMenu_la-applet-util.Plo
#	source='applet-util.c' object='libcd_GMenu_la-applet-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcd_GMenu_la_CFLAGS) $(CFLAGS) -c -o libcd_GMenu_la-applet-util.lo `test -f 'applet-util.c' || echo '$(srcdir)/'`applet-util.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES

 #dnl Process this file with automake to produce Makefile.in
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
