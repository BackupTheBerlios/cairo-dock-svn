#!en;@VERSION_RAME@

#[gtk-about]
[Icon]
#F[Desired icon size for this applet]
frame1 = 
#i+ width :
width = 32
#i+ height :
height = 32
#F
frame1_ = 

#s Name of the icon as it will appear in its label in the dock :
name = rame

icon =

#E[] Name of the dock it belongs to:
dock name = 

order=
icon=

#[gtk-convert]
[Desklet]
#i+[48;256] Desklet's dimension (width x height) :
#{Depending on your WindowManager, you can resize it with ALT + middle_click or ALT + left_click for exemple.}
width=256
#i+[48;256] ...
height=256

#i[-2048;2048] Desklet's position (x ; y) :
#{Depending on your WindowManager, you can move it with ALT + left_click}
x position=0
#i[-2048;2048] ...
y position=0

#b Is detached from the dock ?
initially detached=false

#b Keep below other windows ?
keep below=false
#b Keep above other windows ?
keep above=false
#b Keep on widget layer ?
#{for CompizFusion's "widget layer", set behaviour in Compiz to: (name=cairo-dock & type=utility)}
on widget layer=false
#b Lock position ?
#{If locked, the desklet can't be moved by simply dragging it with the left mouse button. Of course you can still move it with ALT + left_click.}
locked = false

#I[-180;180] Rotation :
#{in degrees.}
rotation = 0

use size=

#F[Decorations;gtk-orientation-portrait]
frame_deco=

#o+ Choose a decoration theme for this desklet :
#{Choose the 'personnal' one to define your own decorations below.}
decorations = default

#v
sep_deco =

#S+ Background image :
#{It's an image that will be displayed below the drawings, like a frame for exemple. Let empty to not use any.}
bg desklet =
#e+[0;1] Background tansparency :
bg alpha = 1
#i+[0;256] Left offset :
#{in pixels. Use this to adjust the left position of the drawings.}
left offset = 0
#i+[0;256] Top offset :
#{in pixels. Use this to adjust the top position of the drawings.}
top offset = 0
#i+[0;256] Right offset :
#{in pixels. Use this to adjust the right position of the drawings.}
right offset = 0
#i+[0;256] Bottom offset :
#{in pixels. Use this to adjust the bottom position of the drawings.}
bottom offset = 0
#S+ Foreground image :
#{It's an image that will be displayed above the drawings, like a reflect for exemple. Let empty to not use any.}
fg desklet =
#e+[0;1] Foreground tansparency :
fg alpha = 1

#[gtk-preferences]
[Configuration]
#F[Display;gtk-dialog-info]
frame_disp=

#b Display a graphic rather than a gauge ?
use graphic = false

#r[Line;Plain;Bar;Circle;Plain Circle] Type of graphic :
graphic type = 0

#c+3[0;1] High values color for RAM :
#{It's the color of the graphic for high RAM values.}
high color = 0;0;1

#c+3[0;1] Low values color for RAM :
#{It's the color of the graphic for low RAM values.}
low color = 0;1;0

#c+3[0;1] High values color for SWAP :
#{It's the color of the graphic for high RAM values.}
high color2 = 1;0;0

#c+3[0;1] Low values color for SWAP :
#{It's the color of the graphic for low RAM values.}
low color2 = 1;1;0

#b Draw both values on the same graph ?
mix graph = false

#c+4[0;1] Background color of the graphic :
bg color = .5;.5;1.;.4

#R+[] List of available themes for the gauge :/
theme = turbo-night-fuel

#v
sep1=

#S+ Image to display as a watermark on the gauge :
#{Let it empty to use the default image. Set the transparency to 0 if you don't want to have any watermark.}
watermark image =

#e+[0;1] Transparency of the watermark :
#{Set it up to 0 if you don't want to have a watermark.}
watermark alpha = .6

#v
sep2=

#r[No;On icon;On label] Display memory values :
info display = 1

#b Display SWAP too ?
show swap = false


#F[Top List;gtk-sort-ascending]
frame_top=

#i[1;20] Number of programs to display in the top list :
#{When you left-click on the icon, you will get the list of the N most memory-using programs.}
top = 5

#c+3[0;1] Start color of the top list :
#{It's the first color of the gradation used to write the top list.}
top color start = 0;1;0

#c+3[0;1] Stop color of the top list :
#{It's the second color of the gradation used to write the top list.}
top color stop = 0;0;1


#F[Configuration;gtk-preferences]
frame_conf=

#i[1;60] Delay between refresh :
#{in seconds.}
delay = 10

#b Show top memory usage in % ?
top in percent = false
