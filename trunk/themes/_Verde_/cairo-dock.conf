#!en;1.5.5.3
######## This is the conf file of cairo-dock, released under the GPL.##########
######## It is parsed by cairo-dock to automatically generate an appropriate GUI,##########
######## so don't mess into it, except if you know what you're doing ! ;-)##########

#[gtk-fullscreen]
[Position]

#F-[Position on the screen;gtk-fullscreen]
frame1=

#r-[bottom;top;left;right] Choose the screen border regarding to which the dock will place itself :
#{The icons will scroll according to the chosen placement type. Of course the dock can be placed anywhere on the screen, here we specify regarding to what.}
screen border=0

#e-[0.;1.] Relative alignment :
#{At 0, the dock will place itself regarding the left corner if horizontal and the top corner if vertical, at 1 regarding the right corner if horizontal and the bottom corner if vertical, and at 0.5, regarding the middle of the screen's edge.}
alignment=0.5

#F-[Position regarding the chosen screen's edge;gtk-leave-fullscreen]
frame2=

#i-[-1024;1024] Lateral gap :
#{Gap from the absolute position on the screen's edge, in pixels. You can also move the dock by holding ALT or CTRL key and left mouse button.}
x gap=0
#i-[-20;2000] Distance to the screen's edge :
#{in pixels. You can also move the dock by holding ALT or CTRL key and left mouse button.}
y gap=0

#F-
frame2_=

#i-[0;9999] Size allowed for the dock :
#{The dock will automatically resize itself to fit this size. Set it to 0 to make the dock fit the screen's size.}
max autorized width=0

#b- Reserve space at the edge of the screen for the dock ?
#{This will prevent other windows from overlapping the dock. It has no effect if you defined the 'show/hide' shortcut below, cause then the dock behaves like a menu.}
reserve space=false

#v-
separator_=

#b- Activate auto-hide ?
#{The dock will automatically hide itself outside of the scren when the mouse leaves it and will show a callback zone instead. Place the mouse into this zone will make the dock re-appear.}
auto-hide=true

#k- Keyboard shortcut to show/hide the dock :
#{When you press the shortcut, the dock will hide or show itself at the potition of your mouse, thus acting like a menu.}
raise shortcut=

#[gtk-dnd-multiple]
[TaskBar]

#F-[Behaviour]
frame1=

#b- Show the current applications in the dock ?
#{Cairo-Dock will then replace your taskbar. It is recommanded to remove any other taskbar, and to not force the dock's type to normal.}
show applications=true

#b- Should the applications with same PID be displayed only once ?
unique PID=false

#b- Should the applications with same class be grouped in a sub-dock ?
#{This allows to group windows in some soft like Gimp, and to have only 1 icon in the main dock.The 1st window will appear in the main dock, and the others will be placed in a container associated with this 1st icon.}
group by class=false

#b- Only show icons whose window is minimized ?
hide visible=false

#b- Only show applis on current desktop ?
current desktop only=false

#v- 
sep_app=

#b- Mix launchers and applis ?
#{Allows launchers to act as applis when their program is running, and displays an indicator on their icon to signal it. You can launch other occurences of the program with SHIFT+click.}
mix launcher appli=true

#b- Overwrite X icons with launchers' one ?
#{If not set, will use the icon provided by X for each appli. If set, the same icon as the corresponding launcher will be used for each appli.}
overwrite xicon=true

#F-[Interaction]
frame2=

#b- Minimize the window when its icon is clicked, if it was already the active window ?
#{It is the default behaviour of most of taskbars.}
minimize on click=true

#b- Middle click on an icon closes its relative application ?
#{In a Firefox's tabs manner.}
close on middle click=true

#b- Automatically quick-hide the dock when a window becomes fullscreen ?
#{This is only usefull if don't already use the auto-hide, and if your WM let the dock in front of fullscreen windows.}
auto quick hide=true

#b- Signal the applications demanding your attention with a dialog tip ?
demands attention with dialog=true

#b- Signal the applications demanding your attention with an animation ?
demands attention with animation=false

#b- Play a short animation of the icon when its window becomes active ?
animate on active window=true

#F-[Representation]
frame3=

#i- Maximum number of caracters in application's name :
#{"..." will be added at the end if the name is too long.}
max name length=15

#e-[-1;1] Transparency of icons whose window is or isn't minimized :
#{To the right, you can control the transparency of minimized windows, to the left the transparency of visible windows. The more you go aside, the more the concerned icons will be transparent; on the middle, icons are always plain.}
visibility alpha=0.69999999999999996


#[gtk-preferences]
[System]

#F-[Movement parameters;/usr/share/cairo-dock/icon-movment.png]
frame_mov=

#e-[0.;12.] Icons' lateral unfolding acceleration :
#{The icons will appear folded on themselves, regarding the alignement point, then will unfold untill they fill the whole dock. Use 0 to not use unfolding, the more it's close to 0, the faster it will be}
unfold factor=8

#I-[5;50] Number of steps for icons' resizing (grow up/shrink down) :
#{The more there are, the slower it will be}
grow up steps=10
#I-[5;50] ...
shrink down steps=12

#f-[0.1;0.9] Window's move acceleration (move up/move down) :
#{in percentage of the distance it can move at each step . After n steps, the remaining distance will be reduced by (1-s)^n.}
move up speed=0.34999999999999998
#f-[0.1;0.9] ...
move down speed=0.25

#b- Animate the dock when auto-hiding ?
#{The dock will unfold when it hides/shows itself. No effect if auto-hide is not activated or unfold acceleration is nul.}
animate on auto-hide=true

#F-[Mouse;/usr/share/cairo-dock/icon-mouse.png]
frame_mouse=

#e-[0;1] Scroll speed factor for background decorations :
#{The smaller, the lower the decorations will move along with the cursor. At 0 they will be static.}
scroll speed factor=0.504

#b- Should the decorations be enslaved to the cursor ?
#{Otherwise the amount of movement of the decorations will only depend on the direction of the cursor's movement, as if the decorations were "gliding".}
decorations enslaved=true

#i-[0;99] Amount of pixels the icons will scroll at each wheel scroll :
#{If you put 0, this will make them scroll of exactly one icon each time.}
scroll amount=0

#b- Re-center the dock on leaving if it has been scrolled ?
reset scroll=true

#e-[0.;0.99] If so, you can specify the scrolling acceleration :
#{The more it's close to 0, the faster the scroll will be.}
reset scroll acceleration=0.90000000000000002

#F-[Sub-docks;/usr/share/cairo-dock/icon-subdock.png]
frame_sub=

#i- Delay before you effectively leave from a sub-dock or to a sub-dock :
#{in ms.}
leaving delay=250

#i- Delay before displaying a sub-dock :
#{in ms. Unused if you set up to click to show sub-docks.}
show delay=300

#b- Click to show sub-docks ?
#{Otherwise they will appear when you linger over the icon pointing on it.}
show on click=false

#b- Animate sub-docks when they appear ?
#{Always true if sub-docks appear with mouse click.}
animate subdocks=true

#F-[CPU;gtk-execute]
frame_cpu=

#i-[5;40] Refresh frequency when mouving cursor into the dock :
#{in Hz. This is to adjust regarding your CPU power.}
refresh frequency=35

#b- Reflections should be calculated in real-time ?
#{The transparency gradation pattern will then be re-calculated in real time. May needs more CPU power.}
dynamic reflection=false

#F-[Labels;gtk-underline]
frame_label=

#b- Show label of the currently pointed icon only ?
pointed icon only=true

#b- Should the labels be always horizontal, even when dock is vertical ?
always horizontal=false

#f-[0.;50.] label's visibility threshold :
#{the bigger, the more the labels next to the pointed icon will be transparent.}
alpha threshold=10

#F-[Files;gtk-file]
frame_file=

#r-[Name;Size;Date] Sort files by :
sort files=0

#b- Show hidden files ?
show hidden files=false


#[gtk-disconnect]
[Applets]


#F-[Choose some useful accessories for your dock !]
frame_m0=
#M-999[weather;/usr/share/cairo-dock/plug-in/weather/readme;/usr/share/cairo-dock/plug-in/weather/preview.png;/usr/share/cairo-dock/plug-in/weather/icon.png;Cairo-Penguin;/usr/share/cairo-dock/plug-in/Cairo-Penguin/readme;/usr/share/cairo-dock/plug-in/Cairo-Penguin/preview.png;/usr/share/cairo-dock/plug-in/Cairo-Penguin/icon.png;clock;/usr/share/cairo-dock/plug-in/clock/readme;/usr/share/cairo-dock/plug-in/clock/preview.png;/usr/share/cairo-dock/plug-in/clock/icon.png;wifi;/usr/share/cairo-dock/plug-in/wifi/readme;/usr/share/cairo-dock/plug-in/wifi/preview.png;/usr/share/cairo-dock/plug-in/wifi/icon.png;terminal;/usr/share/cairo-dock/plug-in/terminal/readme;/usr/share/cairo-dock/plug-in/terminal/preview.png;/usr/share/cairo-dock/plug-in/terminal/icon.png;PowerManager;/usr/share/cairo-dock/plug-in/powermanager/readme;/usr/share/cairo-dock/plug-in/powermanager/preview.png;/usr/share/cairo-dock/plug-in/powermanager/icon.png]  List of available accessories :
#{Just check the box to activate a plug-in, or uncheck to deactivate it. Once activated, you can use it and configure it.}/
modules_0=

#F-[Add fonctionnalities to your dock !]
frame_m1=
#M-999[logout;/usr/share/cairo-dock/plug-in/logout/readme;/usr/share/cairo-dock/plug-in/logout/preview.png;/usr/share/cairo-dock/plug-in/logout/icon.svg;systray;/usr/share/cairo-dock/plug-in/systray/readme;/usr/share/cairo-dock/plug-in/systray/preview.png;/usr/share/cairo-dock/plug-in/systray/icon.png;xfce integration;/usr/share/cairo-dock/plug-in/xfce-integration/readme;/usr/share/cairo-dock/plug-in/xfce-integration/none;/usr/share/cairo-dock/plug-in/xfce-integration/icon.png;shortcuts;/usr/share/cairo-dock/plug-in/shortcuts/readme;/usr/share/cairo-dock/plug-in/shortcuts/preview.png;/usr/share/cairo-dock/plug-in/shortcuts/icon.png;dustbin;/usr/share/cairo-dock/plug-in/dustbin/readme;/usr/share/cairo-dock/plug-in/dustbin/preview.png;/usr/share/cairo-dock/plug-in/dustbin/icon.png;gnome integration old;/usr/share/cairo-dock/plug-in/gnome-integration-old/readme;/usr/share/cairo-dock/plug-in/gnome-integration-old/none;/usr/share/cairo-dock/plug-in/gnome-integration-old/icon.svg;Dbus;/usr/share/cairo-dock/plug-in/Dbus/readme;/usr/share/cairo-dock/plug-in/Dbus/preview.png;/usr/share/cairo-dock/plug-in/Dbus/icon.svg;showDesklets;/usr/share/cairo-dock/plug-in/showDesklets/readme;/usr/share/cairo-dock/plug-in/showDesklets/preview.png;/usr/share/cairo-dock/plug-in/showDesklets/icon.png;compiz-icon;/usr/share/cairo-dock/plug-in/compiz-icon/readme;/usr/share/cairo-dock/plug-in/compiz-icon/preview.png;/usr/share/cairo-dock/plug-in/compiz-icon/icon.png;showDesktop;/usr/share/cairo-dock/plug-in/showDesktop/readme;/usr/share/cairo-dock/plug-in/showDesktop/preview.png;/usr/share/cairo-dock/plug-in/showDesktop/icon.png;rendering;/usr/share/cairo-dock/plug-in/rendering/readme;/usr/share/cairo-dock/plug-in/rendering/none;/usr/share/cairo-dock/plug-in/rendering/icon.png;Xgamma;/usr/share/cairo-dock/plug-in/Xgamma/readme;/usr/share/cairo-dock/plug-in/Xgamma/preview.png;/usr/share/cairo-dock/plug-in/Xgamma/icon.png]  List of available desktop enhancements :
#{Just check the box to activate a plug-in, or uncheck to deactivate it. Once activated, you can use it and configure it.}/
modules_1=rendering

#F-[Control your PC from your dock !]
frame_m2=
#M-999[xmms;/usr/share/cairo-dock/plug-in/xmms/readme;/usr/share/cairo-dock/plug-in/xmms/preview.png;/usr/share/cairo-dock/plug-in/xmms/icon.png;AlsaMixer;/usr/share/cairo-dock/plug-in/AlsaMixer/readme;/usr/share/cairo-dock/plug-in/AlsaMixer/preview.png;/usr/share/cairo-dock/plug-in/AlsaMixer/icon.png;Rhythmbox;/usr/share/cairo-dock/plug-in/rhythmbox/readme;/usr/share/cairo-dock/plug-in/rhythmbox/preview.png;/usr/share/cairo-dock/plug-in/rhythmbox/icon.png]  List of available controlers :
#{Just check the box to activate a plug-in, or uncheck to deactivate it. Once activated, you can use it and configure it.}/
modules_2=



#[gtk-orientation-portrait]
[Background]

#F+[Callback zone;gtk-goto-bottom]
frame1=

#i[1;1024]+ Size of the callback zone (width x height, in pixels) :
#{Place the mouse into this zone will make the dock re-appear.}
zone width=60
#i+ ...
zone height=40

#S+ Filename of an image to put on the callback zone :
#{Any format allowed; let this field empty to have an invisible callback zone. The callback zone is what you see when the dock hides itselfs.}
callback image=minidock.svg

#e+[0;1] Transparency of the callback zone :
alpha=0.70000000000000018

#b+ Rotate the callback zone's image when the dock is on top/left/right ?
#{Use it when the image is an arrow pointing to the center of the screen for exemple.}
reverse visible image=true


#F+[Extern Frame;/usr/share/cairo-dock/icon-frame.png]
frame4=
#i+[0;30] Corner radius :
#{in pixels.}
corner radius=10

#i+[0;20] Linewidth of the extern line :
#{in pixels.}
line width=2

#i+[0;20] Margin between the frame and the icons or their reflects :
#{in pixels.}
frame margin=2

#c+4[0;1] Color of the extern line (r,v,b,a) :
line color=0.029282063019760433;0.78355077439536125;0.39131761654077973;0.84313725490196079;

#b+ Are the bottom left and right corners rounded ?
rounded bottom corner=true


#F+[Background image...;gtk-orientation-portrait]
frame2=

#S+ Image's filename to use as a background :
#{Any format allowed; let this field empty if you don't want to use an image as background.}
background image=

#e+[0;1] Image's transparency :
image alpha=0

#b+ Repeat image as a pattern to fill background ?
repeat image=false

#F+[...or Gradation;/usr/share/cairo-dock/icon-gradation.png]
frame3=

#c+4[0;1] Bright color (red, green, blue, alpha) :
stripes color bright=0.49921416037232014;0.79403372243839165;0.71908140688181887;0.74999618524452583;

#c+4[0;1] Dark color (red, green, blue, alpha) :
stripes color dark=0.53719386587319751;0.81625085831998168;0.75097276264591439;0.69999237048905161;

#f+[-90;90] Angle of the stripes / gradation, in relation to the vertical (in degree) :
stripes angle=20

#i+ Number of stripes, in each pattern, to draw in the background :
#{The bigger, the more the stripes are close to each other; with 0 stripes, the background will be filled with a single gradation.}
number of stripes=40

#f+[0;1] Width of the stripes, in percentage of the pattern size :
#{1 pattern contains N stripes, so the width can be less or equal than 1/N.}
stripes width=0.024


#[gtk-about]
[Icons]

#F+[Wave's shape]
frame_shape=
#f+[0;5] Crest of the wave :
#{the maximum zoom will be 1+C.}
amplitude=1

#i+[1;999] Width of the interval in which the wave will be effective :
#{in pixels. Outside of this interval (centered on the mouse), the wave is flat.}
sinusoid width=300

#i+[0;50] Space between icons :
#{in pixels.}
icon gap=0

#e+[0;1] Icons' transparency at rest :
#{It is their transparency when the wave is flat; they will "materialize" progressively as the dock grows up. The closer to 0, the more transparent they will be.}
alpha at rest=1

#F[Reflections]
frame_refl=

#e+[0;1] Reflecting power of the plane :
#{It is its albedo; at 1 the icons reflect to the maximum, at 0 reflects are not used.}
albedo=0.59999999999999998

#e+[0;1] Field depth of the view:
#{More precisely, it is the fraction of the max icon height that will be used to draw reflect. So setting it to 0.33 will mean that 33% of the icons will reflect on the ground, and the icons will be placed at the right distance from the front border of the frame so that the reflect is fully visible.}
field depth=0.69999999999999996

#F+[Style of the icons' labels;gtk-select-font]
frame_label=

#i+[0;40] Size of the font :
#{approximately size in pixels, put 0 to not display labels}
size=14

#P+ Family of the font used for labels :
#{for exemple Monospace, Purisa, ... Just write the font name wihtout any number or so.}
police=Sans

#b+ Should be italic ?
italic=false

#i+[1;9] Weight (between 1 and 9, the bigger, the heavier):
weight=6

#c+4[0;1] Color of the label's background :
#{If you set it to fully transparent, there will be no background for the text, but the letters' outline will be thicker.}
text background color=0;0;0;0.5;

#b+ Use background color for labels ?
#{If false, only the quick-info will have this background color.}
background for label=false


#F+[Link the icons with a string]
frame_string=

#i+[0;20] Linewidth of the string, in pixels (0 to not use string) :
string width=0

#c+4[0;1] Color of the string (red, blue, green, alpha) :
string color=0;0;0.59999999999999998;0.40000000000000002;

#F+[Icons' themes]
frame_theme=

#D+99 List of icons themes or directories :
#{Directories or themes where to search icons. Put some directories where you have icons you wish to see in the dock, or put some theme's name you've installed on your system. (the order is taken into account during the research). The key word _ThemeDirectory_ represents the directory ~/.cairo-dock/current_theme/launchers}/
default icon directory=_ThemeDirectory_


#X+[Launchers]
frame_launcher=

#i+ Icon size at rest (width x height) :
#{Put 0 if you don't want to restrain them}
launcher width=0
#i+ ...
launcher height=0

#r+[bounce;rotate;blink;pulse;upside-down;wobbly;random] Animation type when clicked :
launcher animation=0

#i+ Number of times the icon will bounce/rotate/blink/etc when clicked :
launcher number of rounds=4

#S+ Filename of an image to use for indicators :
#{Indicators are drawn on launchers icons to show that they have already been launched. Let blank to use the default one.}
indicator image=

#e+[0.1;1.5] Indicator size ratio :
#{The ratio between indicator's size and icon's size. The bigger, the bigger the indicators are.}
indicator ratio=1

#b Link the indicator with its icon ?
#{It will then be resized like the icon, move like the icon, etc. Otherwise it will be drawn directly on the dock.}
link indicator=true

#i[-10;64] Vertical offset :
#{i pixels. You can use this parameter to adjust the indicator's vertical position.}
indicator deltaY=2

#X+[Applications]
frame_appli=

#i+ Icon size at rest (width x height) :
#{Put 0 if you don't want to restrain them}
appli width=48
#i+ ...
appli height=48

#r+[bounce;rotate;blink;pulse;upside-down;wobbly;random] Animation type when clicked :
appli animation=1

#i+ Number of times the icon will bounce/rotate/blink/etc when clicked :
appli number of rounds=2


#X+[Applets]
frame_applet=

#i+ Icon size at rest (width x height) :
#{Put 0 if you don't want to restrain them}
applet width=0
#i+ ...
applet height=0

#r+[bounce;rotate;blink;pulse;upside-down;wobbly;random] Animation type when clicked :
applet animation=2

#i+ Number of times the icon will bounce/rotate/blink/etc when clicked :
applet number of rounds=1

#X+[Separators]
frame_sep=

#i+ Icon size at rest (width x height) :
#{Put 0 if you don't want to restrain them}
separator width=0
#i+ ...
separator height=0

#b Automatically add separators ?
#{Separators are icons used to make a separation between different types of icons. Cairo-dock can automatically add them between launchers, applis, and applets.}
use separator=true

#S+ Filename of an image to use for separators :
#{If you don't provide one, blanks will be used.}
separator image=separateur.svg

#b+ Make the separator's image revolve when dock is on top/on the left/on the right ?
revolve separator image=true

#b+ Force separator's image size to stay constant ?
force size=true

#X+
frame_sep_=

#T+3[launchers;applications;applets] Order of the different types of icons :
icon's type order=launchers;applications;applets;

#[gtk-zoom-fit]
[Views]

#F[Main Dock]
frame_main=

#n+ Choose the default view for main dock :/
main dock view=default

#F[Sub-Docks]
frame_sub=

#n+ Choose the default view for sub-docks :
#{You can overwrite this parameter for each sub-dock.}/
sub-dock view=default

#b+ Are the sub-docks parallel to main docks ?
#{otherwise they will be perpendicular}
same horizontality=true

#e+[0.1;1.] Ratio for the size of the sub-docks' icons :
#{You can specify a ratio for the size of the sub-docks' icons, regarding the main docks' icons size}
relative icon size=0.80000000000000004


#[gtk-dialog-question]
[Dialogs]

#F+[Buttons;/usr/share/cairo-dock/icon-buttons.png]
frame_button=

#i+[10;99] Size of buttons in the info-bubbles (width x height) :
#{in pixels.}
button width=48
#i+[10;99]  ...
button height=32

#S+ Name of an image to use for the yes/ok button :
#{If you don't provide any, a default image will be used.}
button_ok image=

#S+ Name of an image to use for the no/cancel button :
#{If you don't provide any, a default image will be used.}
button_cancel image=

#F+[Bubble;/usr/share/cairo-dock/icon-bubble.png]
frame_bubble=

#c+4[0;1] Background color of the bubble (r,v,b,a) :
background color=1;1;1;0.69999999999999996;

#i+[0;99] Size of the icon displayed next to the text :
#{Put 0 to let the size adapt itself to the text.}
icon size=48

#F+[Text;gtk-select-font]
frame_text=

#c+4[0;1] Text color (r,v,b,a) :
text color=0;0;0;1;

#b+ Homogeneous with icons' label ?
#{The messages will have the same style as the icons' labels. The beneath parameters are then unused.}
homogeneous text=true

#i+[0;40] Size of the font :
#{approximately size in pixels, put 0 to not display labels}
message size=14

#P+ Family of the font used for labels :
#{for exemple Monospace, Purisa, ... Just write the font name wihtout any number or so.}
message police=Sans

#i+[1;9] Weight (between 1 and 9, the bigger, the heavier):
message weight=5

#b+ Should be italic ?
message italic=false


#[gtk-convert]
[Desklets]

#c+4[0;1] Background color (r,v,b,a) :
background color=1;1;1;0.20000000000000001;

#c+4[0;1] Background color when mouse hovers it (r,v,b,a) :
background color inside=1;1;1;0.59999999999999998;
