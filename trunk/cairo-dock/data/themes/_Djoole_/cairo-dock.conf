#!fr;1.3.3
######## Ceci est le fichier de conf de Cairo-Dock, placé sous license GPL.##########
######## Il est interprété par Cairo-Dock pour générer automatiquement une IHM appropriée,##########
######## donc évitez d'y toucher, sauf si vous savez ce que vous faites ! ;-)##########

[Position]

#F-[Positionnement sur l'écran]
frame1=

#s-[bottom;top;left;right] Choisissez par rapport à quel bord de l'écran le dock doit se placer.
# Les icônes se dérouleront en accord avec le type de placement choisi.
# Le dock peut bien sûr se placer n'importe où sur l'écran, ici il s'agit de préciser par rapport à quoi:
screen border=bottom

#e-[0.;1.] Alignement relatif.
# A 0, le dock se placera relativement au coin gauche à l'horizontal et haut à la verticale,
# à 1 relativement au coin droit à l'horizontal et bas à la verticale,
# et à 0.5 relativement au milieu :
alignment=0.5

#F-[Positionnement par rapport au bord de l'écran choisi]
frame2=

#i-[-2000;2000] Ecart par rapport à la position absolue sur le bord de l'écran :
x gap=0
#i-[-20;2000] Distance au bord de l'écran.
y gap=0

#F-
frame2_=

#b-
# La fenêtre doit-elle reserver l'espace au bord de l'écran pour elle seule ?
reserve space=false

[Auto-Hide]

#b-
#Cacher le dock automatiquement quand la souris le quitte et montrer une zone de rappel à sa place ?
auto-hide=true

#i+ Taille de la zone de rappel, où vous placerez la souris pour rappeler le dock (largeur x hauteur) :
zone width=600
#i+ ...
zone height=20

#S+ Nom de fichier d'une image à mettre en fond de la zone de rappel, ou rien si vous voulez la laisser vide :
background image=

#e+[0;1] Transparence utilisée pour le rendu de la zone de rappel :
alpha=0.5

#b+ Retourner l'image de la zone de rappel lorsque le dock est en haut ? /
reverse visible image=true




[Cairo Dock]
#s-[en;fr]  Langage (pour les fenêtres de config): /
language=fr

#T-3[launchers;applications;applets] Ordre des differents types d'icônes :
icon's type order=launchers;applications;applets;

#F[Carousel]
frame1=

#i-[0;9999] Largeur maximale que peut avoir le dock.
# Vous pourrez scroller avec la molette de la souris pour faire défiler les icônes, à la manière d'un carrousel.
# Si vous mettez 0, le dock s'adaptera automatiquement à la taille du bureau.
max autorized width=0

#b- Forcer la vue en carrousel ?
# (cela adaptera automatiquement la taille de la barre afin de la faire boucler sur elle-même)
force loop=false

#i-[0;99] De combien de pixels les icônes vont défiler à chaque coup de molette
# Si vous mettez 0, cela les fera défiler d'une icône exactement à chaque fois.
scroll amount=0

#b+ Recentrer le dock en quittant ? /
reset scroll=true

#e+[0.;0.99] Si oui, vous pouvez spécifier l'accélération du défilement :
# (plus c'est proche de 0, plus le défilement sera rapide)
reset scroll acceleration=0.90000000000000002

#F+[Forme de la vague]
frame2=
#f+[0;5] Crête de la vague (le zoom maximal sera de 1+C) :
amplitude=1

#i+[1;999] Largeur de l'intervalle dans lequel la vague sera effective (en pixels).
# En dehors de cet intervalle (centré sur le curseur), la vague sera plate :
sinusoid width=120

#F+[Cadre extérieur]
frame3=
#i+[0;30] Rayon des coins, en pixels : /
corner radius=0

#i+[0;20] Epaisseur du cadre, en pixels : /
line width=4

#c+4[0;1] Couleur du cadre (rouge, vers, bleu, alpha):
line color=0;0;0;0.25;

#b+ Les coins du bas sont-ils arrondis aussi ? /
rounded bottom corner=false

#F+[Relier les icônes avec une ficelle]
frame4=

#i+[0;20] Epaisseur de la ficelle, en pixels (0 pour ne pas avoir de ficelle) : /
string width=0

#c+4[0;1] Couleur de la ficelle (red, blue, green, alpha):
string color=0;0;0.59999999999999998;0.40000000000000002;

#F-[Caractéristiques du mouvement]
frame5=

#e-[0.;12.] Acceleration de depliage lateral des icones, par rapport au point d'alignement.
# les icônes apparaitront repliees sur elles-mêmes, puis se déplieront jusqu'a remplir tout le dock.
# Mettre 0 pour ne pas utiliser le dépliage, plus c'est proche de 0, plus c'est rapide :
unfold factor=8

#I-[5;50] Nombre d'étapes dans le redimensionnement des icônes (grossissement/rétrecissement).
# Plus il y'en a, plus celui-ci sera lent :
grow up steps = 10
#I-[5;50] ...
shrink down steps = 12

#f-[0.1;0.9] Acceleration du mouvement de la fenêtre,
# en pourcentage de la distance pouvant être parcourue à chaque étape (montée, descente).
# Après n étapes, la distance restante sera réduite par (1-a)^n :
move up speed=0.34999999999999998
#f-[0.1;0.9] ...
move down speed=0.25

#i-[5;40]Fréquence de rafraîchissement lorsqu'on bouge le curseur dans le dock,
# à ajuster en fonction de la puissance de processeur :
# (pour information, la fréquence d'un film est autour de 25) (en Hz):
refresh frequency=25


[Sub-Docks]

#b+
# Les sous-docks sont-ils parallèles aux docks principaux ? (sinon ils seront perpendiculaires) :
same horizontality=true

#e+[0.1;1.] Vous pouvez spécifier un ratio de la taille des icônes des sous-docks
# par rapport à celles des docks principaux :
relative icon size=0.80000000000000004

#b-
# Montrer les sous-docks au survol de l'icône ?
# (sinon vous devrez cliquer sur l'icône pour faire apparaître le sous-dock)
on mouse over=true

#i- Délai avant de sortir effectivement d'un sous-dock (en ms) :
leaving delay=250

#i- Délai avant l'affichage d'un sous-dock (en ms) :
show delay = 300

[Labels]

#F+[Style des étiquettes]
frame1=

#i+[0;40] Taille de la police (approximativement la taille en pixels, mettre 0 pour ne pas afficher les étiquettes) :
size=16

#P+ Police de caractères utilisée pour les étiquettes (par exemple monospace, Purisa, ...) :
police="sans"

#i+[1;9] Poids (entre 1 et 9, plus c'est élevé, plus les traits sont épais):
weight=9

#b+ Le texte est-il en italique ? /
italic=false

#F+
frame1_=

#b- Les etiquettes doivent être toujours horizontales, même quand le dock est vertical ? /
always horizontal=false

#b- Ne montrer que l'étiquette de l'icône pointée ? /
pointed icon only=true

#f-[5.;30.] Seuil de visibilité des étiquettes;
# plus la valeur est élevé, plus les étiquettes à côté de l'icône pointée sont transparentes :
alpha threshold=30




[Background]

#e+[0;1]
#Facteur de vitesse de défilement pour les décorations du fond.
# Plus c'est proche de 0, plus les décorations se déplaceront lentement avec le curseur
# (à 0 elles seront immobiles) :
scroll speed factor=0

#b+ Les décorations doivent-elles être asservies au curseur ?
# (sinon le delta de deplacement des décorations ne dépendra que de la direction du mouvement de ce dernier).
decorations enslaved=true

#F+[Image de fond]
frame1=

#S+ Nom du fichier de l'image (ou rien si vous ne voulez pas utiliser une image en fond) :
background image=

#e+[0;1] Transparence de l'image :
image alpha=0.5

#b+ Répéter l'image comme un motif pour remplir le fond ? /
repeat image=false

#F+[Dégradé]
frame2=

#c+4[0;1] Couleur claire (rouge, vert, bleu, alpha):
stripes color bright=0;0;0;0.4999999999999995;

#c+4[0;1] Couleur foncée (rouge, vert, bleu, alpha):
stripes color dark=0;0;0;0.49999999999999961;

#f+[-90;90] Angle d'inclinaison du dégradé / des rayures, par rapport à la verticale (en degrés) :
stripes angle=45

#i+ Nombre de rayures, dans chaque motif, à dessiner dans le fond.
# Plus c'est élevé, plus les rayures seront proches les unes des autres :
# Avec 0 rayures, un dégradé unique remplira tout le fond.
number of stripes=20

#f+[0;1] Largeur des rayures, en pourcentage de la taille d'un motif.
# (1 motif contient N rayures, donc a largeur peut être inférieure ou égale à 1/N) :
stripes width=0.014999999999999999




[Launchers]

#F+[Générique]
frame1=

#i+ Taille minimale et maximale que les icônes peuvent avoir (au repos) :
# ou 0 si vous ne voulez pas les restreindre :
min icon size=0
#i+ ...
max icon size=48

#s+[bounce;rotate;blink;pulse;random] Type d'animation lorsqu'elles sont cliquées :
animation type=bounce

#i+ Nombre de fois où l'icône va rebondir/tourner/clignoter/etc :
number of animation rounds=4

#F+
frame1_=

#s+ Nom du thème d'icônes à utiliser, ou rien pour utiliser le thème par défaut de votre système.
# Ce thème doit avoir été installé.
icon theme=gnome

#D+99
# Répertoires où chercher les icônes avant d'aller chercher dans le thème d'icônes choisi.
# Mettez-y des répertoires où vous avez des icônes que vous souhaitez voir dans le dock 
# de préférence aux icônes du thème d'icônes. (L'ordre est pris en compte durant la recherche) :
default icon directory=_ThemeDirectory_

[Applications]

#F+[Générique]
frame1=

#i+ Taille minimale et maximale que les icônes peuvent avoir (au repos) :
# ou 0 si vous ne voulez pas les restreindre :
min icon size=0
#i+ ...
max icon size=48

#s+[bounce;rotate;blink;pulse;random] Type d'animation lorsqu'elles sont cliquées :
animation type=rotate

#i+ Nombre de fois où l'icône va rebondir/tourner/clignoter/etc :
number of animation rounds=2

#F+
frame1_=

#b-
# Montrer les applications actuellement ouvertes dans le dock ? /
show applications=false

#b- Les applications avec le même PID ne devraient être affichées qu'une seule fois ? /
unique PID=false

#i- Nombre maximum de caractères dans le nom des applications ("..." seront ajoutés si le nom est trop long) :
max name length=15

[Applets]

#F+[Générique]
frame1=

#i+ Taille minimale et maximale que les icônes peuvent avoir (au repos) :
# ou 0 si vous ne voulez pas les restreindre :
min icon size=0
#i+ ...
max icon size=0

#s+[bounce;rotate;blink;pulse;random] Type d'animation lorsqu'elles sont cliquées :
animation type=bounce

#i+ Nombre de fois où l'icône va rebondir/tourner/clignoter/etc :
number of animation rounds=4

#F+
frame1_=
#R-999[file_manager;none;cd_dustbin;/usr/share/cd-dustbin/readme;truc;none;cd_clock;/usr/share/cd-clock/readme] 
# Liste des plug-ins actifs (applets et autres) :
active modules=cd_dustbin

[Separators]

#F+[Générique]
frame1=

#i+ Taille minimale et maximale que les icônes peuvent avoir (au repos) :
# ou 0 si vous ne voulez pas les restreindre :
min icon size=0
#i+ ...
max icon size=0

#F+
frame1_=

#S+
# Nom de fichier d'une image à utiliser pour les séparateurs.
# Si vous n'en spécifiez pas, les séparateurs ne seront pas utilisés :
separator image=

#b+ Faire pivoter l'image du séparateur lorsque le dock est en haut/à droite/à gauche ? /
revolve separator image=true
