#!
######## Ceci est le fichier de conf de Cairo-Dock, placé sous license GPL.##########
######## Il est interprété par Cairo-Dock pour générer automatiquement une IHM appropriée,##########
######## donc évitez d'y toucher, sauf si vous savez ce que vous faites ! ;-)##########

[POSITION]

#F[Positionnement par rapport au bord de l'écran]
frame1=Gap from the middle bottom point of the screen
#i[-1024;1024] Ecart par rapport à la ligne médiane du bord de l'écran :
x gap=0
#i[-20;2000] Distance au bord de l'écran.
y gap=25
#F
frame1_=

#s[bottom;top;left;right] Choisissez par rapport à quel bord de l'écran le dock doit se placer.
# Les icônes se dérouleront en accord avec le type de placement choisi.
# Le dock peut bien sûr se placer n'importe où sur l'écran, ici il s'agit de préciser par rapport à quoi:
screen border=bottom

#e-[0.;1.] Relative alignment.
# At 0, the dock will place itself regarding the left corner, the right corner at 1, and the middle at 0.5:
alignment = .5


[AUTO-HIDE]

#b
#Cacher le dock automatiquement quand la souris le quitte et montrer une zone de rappel à sa place ?
auto-hide=true

#i Taille de la zone de rappel, où vous placerez la souris pour rappeler le dock (largeur x hauteur) :
zone width=200
#i ...
zone height=20

#S Nom de fichier d'une image à mettre en fond de la zone de rappel, ou rien si vous voulez la laisser vide :
background image=background-snow.svg

#e-[0;1] Transparence utilisée pour le rendu de la zone de rappel :
alpha=1

#b- Retourner l'image de la zone de rappel lorsque le dock est en haut ? /
reverse visible image=true

[CAIRO DOCK]
#s1[en;fr]  Langage (pour les fenêtres de config): /
language=fr

#T-3[launchers;applications;applets] Ordre des differents types d'icônes :
icon's type order=launchers;applications;applets;

#F[Carousel]
frame1=Wave's shape

#i[0;9999] Largeur maximale que peut avoir le dock.
# Vous pourrez scroller avec la molette de la souris pour faire défiler les icônes, à la manière d'un carrousel.
# Si vous mettez 0, le dock s'adaptera automatiquement à la taille du bureau.
max autorized width=0

#b Forcer la vue en carrousel ?
# (cela adaptera automatiquement la taille de la barre afin de la faire boucler sur elle-même)
force loop=false

#i[0;99] De combien de pixels les icônes vont défiler à chaque coup de molette
# Si vous mettez 0, cela les fera défiler d'une icône exactement à chaque fois.
scroll amount=0

#b Recentrer le dock en quittant ? /
reset scroll=true

#e-[0.;0.99] Si oui, vous pouvez spécifier l'accélération du défilement :
# (plus c'est proche de 0, plus le défilement sera rapide)
reset scroll acceleration=0.90000000000000002

#F[Forme de la vague]
frame2=Extern Frame
#f[0;5] Crête de la vague (le zoom maximal sera de 1+C) :
amplitude=1

#i Largeur de l'intervalle dans lequel la vague sera effective (en pixels).
# En dehors de cet intervalle (centré sur le curseur), la vague sera plate :
sinusoid width=300

#F[Cadre extérieur]
frame3=
#i[0;30] Rayon des coins, en pixels :
corner radius=10

#i-[0;20] Epaisseur de la ligne extérieure, en pixels :
line width=2

#c4[0;1] Couleur de la ligne extérieure (rouge, vers, bleu, alpha):
line color=0;0;0.80000000000000004;0.40000000000000002;

#b- Les coins du bas sont-ils arrondis aussi ? /
rounded bottom corner=true

#F-[Caractéristiques du mouvement]
frame4=Movement speed and acceleration
#f-[1.01;3] Facteur de redimensionnement des icônes à chaque étape (grossissement, rétrécissement).
# Après n étapes, le zoom maximum d'une icône sera de 1 + A * f^n :
grow up factor=1.45
#f-[0.01;0.99] ...
shrink down factor=0.75
#f-[0.1;0.9] Acceleration du mouvement de la fenêtre,
# en pourcentage de la distance pouvant être parcourue à chaque étape (montée, descente).
# Après n étapes, la distance restante sera réduite par (1-a)^n :
move up speed=0.35
#f-[0.1;0.9] ...
move down speed=0.25

#i-[5;40]Fréquence de rafraîchissement lorsqu'on bouge le curseur dans le dock,
# à ajuster en fonction de la puissance de processeur :
# (pour information, la fréquence d'un film est autour de 25) (en Hz):
refresh frequency=25

[LABELS]

#b
#Ecrire les étiquettes au-dessus des icônes ? /
with labels=true

#b Ne montrer que l'étiquette de l'icône pointée ? /
pointed icon only=false

#f-[5.;30.] Seuil de visibilité des étiquettes;
# plus la valeur est élevé, plus les étiquettes à côté de l'icône pointée sont transparentes :
alpha threshold=10

#F[Style des étiquettes]
frame1=Style of the labels.
#s Police de caractères utilisée pour les étiquettes (par exemple monospace, Purisa, ...) :
police=sans

#i Taille de la police (approximativement la taille en pixels) :
size=14

#i-[1;9] Poids (entre 1 et 9, plus c'est élevé, plus les traits sont épais):
weight=5

#b- Le texte est-il en italique ? /
italic=false

[BACKGROUND]

#f-[1.0;10.0]
#Facteur de vitesse de défilement pour les décorations du fond.
# Plus c'est élevé, plus les décorations se déplaceront lentement par rapport au curseur
# (mettez 1 pour que les décorations suivent le curseur, 2 pour les faire aller 2 fois moins vite, etc) :
scroll speed factor=2

#F[Image de fond]
frame1=Colors for background

#S Nom du fichier de l'image (ou rien si vous ne voulez pas utiliser une image en fond) :
background image=background-snow.svg

#e[0;1] Transparence de l'image :
image alpha=0.59999999999999998

#b Répéter l'image comme un motif pour remplir le fond ? /
repeat image=true

#F[Dégradé]
frame2=

#c4[0;1] Couleur claire (rouge, vert, bleu, alpha):
stripes color bright=0.933;0.933;0.925;0.4;

#c4[0;1] Couleur foncée (rouge, vert, bleu, alpha):
stripes color dark=0.827;0.843;0.811;0.6;

#f-[-90;90] Angle d'inclinaison du dégradé / des rayures, par rapport à la verticale (en degrés) :
stripes angle=30

#i Nombre de rayures, dans chaque motif, à dessiner dans le fond.
# Plus c'est élevé, plus les rayures seront proches les unes des autres :
# Avec 0 rayures, un dégradé unique remplira tout le fond.
number of stripes=15

#f[0;1] Largeur des rayures, en pourcentage de la taille d'un motif.
# (1 motif contient N rayures, donc a largeur peut être inférieure ou égale à 1/N) :
stripes width=0.03

[LAUNCHERS]

#F[Générique]
frame1=Generic

#i Taille minimale et maximale que les icônes peuvent avoir (au repos) :
# ou 0 si vous ne voulez pas les restreindre :
min icon size=0
#i ...
max icon size=0

#s[bounce;rotate;blink;random] Type d'animation lorsqu'elles sont cliquées :
animation type=bounce

#i Nombre de fois où l'icône va rebondir/tourner/clignoter/etc :
number of animation rounds=4

#F
frame1_=

#D99
# Répertoires où chercher les icônes si elles ne sont pas trouvées dans le répertoire .cairo-dock
# (L'ordre est pris en compte durant la recherche, le répertoire .cairo-dock prévalant sur les autres) :
default icon directory=/usr/share/app-install/icons;/usr/share/pixmaps;/usr/share/icons/gnome/scalable/apps;

#s
#Nom du navigateur de fichiers qui sera utilisé pour ouvrir les raccourcis que vous ajouterez au dock :
default file browser=nautilus

[APPLICATIONS]

#F[Générique]
frame1=Generic

#i Taille minimale et maximale que les icônes peuvent avoir (au repos) :
# ou 0 si vous ne voulez pas les restreindre :
min icon size=0
#i ...
max icon size=48

#s[bounce;rotate;blink;random] Type d'animation lorsqu'elles sont cliquées :
animation type=rotate

#i Nombre de fois où l'icône va rebondir/tourner/clignoter/etc :
number of animation rounds=2

#F
frame1_=

#b
# Montrer les applications actuellement ouvertes dans le dock ? /
show applications=true

#b- Les applications avec le même PID ne devraient être affichées qu'une seule fois ? /
unique PID=false

#i Nombre maximum de caractères dans le nom des applications ("..." seront ajoutés si le nom est trop long) :
max name length=15

[APPLETS]

#F[Générique]
frame1=Generic

#i Taille minimale et maximale que les icônes peuvent avoir (au repos) :
# ou 0 si vous ne voulez pas les restreindre :
min icon size=0
#i ...
max icon size=0

#s[bounce;rotate;blink;random] Type d'animation lorsqu'elles sont cliquées :
animation type=blink

#i Nombre de fois où l'icône va rebondir/tourner/clignoter/etc :
number of animation rounds=1

#F
frame1_=
#s99[cd_dustbin;cd_clock] 
# Liste des plug-ins actifs (applets et autres) :
active modules=cd_clock;cd_dustbin;

[SEPARATORS]

#F[Générique]
frame1=Generic

#i Taille minimale et maximale que les icônes peuvent avoir (au repos) :
# ou 0 si vous ne voulez pas les restreindre :
min icon size=0
#i ...
max icon size=0

#F
frame1_=

#S
# Nom de fichier d'une image à utiliser pour les séparateurs.
# Si vous n'en spécifiez pas, les séparateurs ne seront pas utilisés :
separator image=separateur.svg

#b- Faire pivoter l'image du séparateur lorsque le dock est en haut/à droite/à gauche ? /
revolve separator image=true

